[{"C:\\projects\\vkr\\src\\index.js":"1","C:\\projects\\vkr\\src\\components\\Navigation\\Navigation.jsx":"2","C:\\projects\\vkr\\src\\components\\App\\App.jsx":"3","C:\\projects\\vkr\\src\\components\\Home\\Home.jsx":"4","C:\\projects\\vkr\\src\\components\\Home\\LoadData\\LoadData.jsx":"5","C:\\projects\\vkr\\src\\components\\Home\\Risk\\Risk.jsx":"6","C:\\projects\\vkr\\src\\components\\Home\\SetUpParams\\SetUpParams.jsx":"7","C:\\projects\\vkr\\src\\components\\Home\\Yield\\Yield.jsx":"8","C:\\projects\\vkr\\src\\components\\Home\\BestChoice\\BestChoice.jsx":"9","C:\\projects\\vkr\\src\\components\\Home\\Page\\Page.jsx":"10","C:\\projects\\vkr\\src\\components\\Home\\LoadData\\DataFromExcel\\DataFromExcel.jsx":"11","C:\\projects\\vkr\\src\\components\\Home\\LoadData\\DataPresentation\\DataPresentation.jsx":"12","C:\\projects\\vkr\\src\\utils\\disperSKO.js":"13","C:\\projects\\vkr\\src\\utils\\mo.js":"14","C:\\projects\\vkr\\src\\utils\\moments.js":"15","C:\\projects\\vkr\\src\\utils\\varCvar.js":"16","C:\\projects\\vkr\\src\\utils\\ozhPol.js":"17","C:\\projects\\vkr\\src\\utils\\vzvPol.js":"18","C:\\projects\\vkr\\src\\utils\\rangPol.js":"19"},{"size":347,"mtime":1608574372234,"results":"20","hashOfConfig":"21"},{"size":3314,"mtime":1608574344523,"results":"22","hashOfConfig":"21"},{"size":630,"mtime":1608574597788,"results":"23","hashOfConfig":"21"},{"size":8925,"mtime":1608690120729,"results":"24","hashOfConfig":"21"},{"size":855,"mtime":1608575345667,"results":"25","hashOfConfig":"21"},{"size":1544,"mtime":1608678726129,"results":"26","hashOfConfig":"21"},{"size":8453,"mtime":1608692192805,"results":"27","hashOfConfig":"21"},{"size":1377,"mtime":1608678697045,"results":"28","hashOfConfig":"21"},{"size":6465,"mtime":1608683125724,"results":"29","hashOfConfig":"21"},{"size":965,"mtime":1608574384162,"results":"30","hashOfConfig":"21"},{"size":2385,"mtime":1608633571971,"results":"31","hashOfConfig":"21"},{"size":2912,"mtime":1608678908734,"results":"32","hashOfConfig":"21"},{"size":704,"mtime":1608658070875,"results":"33","hashOfConfig":"21"},{"size":293,"mtime":1608658937500,"results":"34","hashOfConfig":"21"},{"size":719,"mtime":1608661736181,"results":"35","hashOfConfig":"21"},{"size":1211,"mtime":1608672142868,"results":"36","hashOfConfig":"21"},{"size":358,"mtime":1608665728781,"results":"37","hashOfConfig":"21"},{"size":892,"mtime":1608666832959,"results":"38","hashOfConfig":"21"},{"size":1646,"mtime":1608671717877,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"aq3z9",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"42"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"42"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"42"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"42"},"C:\\projects\\vkr\\src\\index.js",[],["90","91"],"C:\\projects\\vkr\\src\\components\\Navigation\\Navigation.jsx",[],"C:\\projects\\vkr\\src\\components\\App\\App.jsx",[],"C:\\projects\\vkr\\src\\components\\Home\\Home.jsx",[],"C:\\projects\\vkr\\src\\components\\Home\\LoadData\\LoadData.jsx",["92"],"import React from 'react';\r\nimport s from './LoadData.module.scss';\r\nimport DataFromExcel from './DataFromExcel/DataFromExcel';\r\nimport DataPresentation from './DataPresentation/DataPresentation';\r\n\r\nclass LoadData extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={s.sourceDataWrapper}>\r\n                <DataFromExcel\r\n                    onSourceDataInitialize={this.props.onSourceDataLoaded}\r\n                />\r\n                {(() => {\r\n                    if (this.props.sourceData.length) {\r\n                        return (\r\n                            <DataPresentation funds={this.props.sourceData} />\r\n                        );\r\n                    }\r\n                })()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LoadData;\r\n","C:\\projects\\vkr\\src\\components\\Home\\Risk\\Risk.jsx",[],"C:\\projects\\vkr\\src\\components\\Home\\SetUpParams\\SetUpParams.jsx",["93","94","95","96","97"],"C:\\projects\\vkr\\src\\components\\Home\\Yield\\Yield.jsx",[],"C:\\projects\\vkr\\src\\components\\Home\\BestChoice\\BestChoice.jsx",["98","99"],"import React from 'react';\r\nimport Decimal from 'decimal.js';\r\n\r\nclass BestChoice extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            riskMeasures: [\r\n                { name: 'disp', title: 'Дисперсия' },\r\n                { name: 'sko', title: 'СКО' },\r\n                { name: 'varr', title: 'VaR' },\r\n                { name: 'cvar', title: 'CVaR' },\r\n                { name: 'moment', title: 'Левосторонний момент' },\r\n                {\r\n                    name: 'stdMoment',\r\n                    title: 'Стандартный левосторонний момент',\r\n                },\r\n            ],\r\n            yieldMeasures: [\r\n                { name: 'mo', title: 'Математическое ожидание' },\r\n                { name: 'ojid', title: 'Ожидаемая полезность' },\r\n                { name: 'vzv', title: 'Взвешенная полезность' },\r\n                { name: 'rang', title: 'Ранговая полезность' },\r\n            ],\r\n            activeRisk: 'disp',\r\n            activeYield: 'mo',\r\n            rangeByCriteria: [],\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            rangeByCriteria: this.createRage(\r\n                this.state.activeRisk,\r\n                this.state.activeYield\r\n            ),\r\n        });\r\n    }\r\n\r\n    createRage(activeRisk, activeYield) {\r\n        let risks = this.props.risks.map((r) => ({\r\n                id: r.id,\r\n                name: r.name,\r\n                value: r[activeRisk],\r\n            })),\r\n            yields = this.props.yields.map((r) => ({\r\n                id: r.id,\r\n                name: r.name,\r\n                value: r[activeYield],\r\n            }));\r\n        let riskYield = risks.map((r, i) => {\r\n            let y = yields[i];\r\n            if (r.id != y.id) {\r\n                y = yields.find((yd) => yd.id == r.id);\r\n            }\r\n            let criteriaD = Decimal(this.props.beta)\r\n                .times(y.value)\r\n                .minus(\r\n                    Decimal(Decimal(1).minus(this.props.beta)).times(r.value)\r\n                );\r\n            return {\r\n                name: r.name,\r\n                criteria: criteriaD.toNumber(),\r\n            };\r\n        });\r\n\r\n        return riskYield.sort((a, b) =>\r\n            Decimal(b.criteria).comparedTo(Decimal(a.criteria))\r\n        );\r\n    }\r\n\r\n    onRiskChange(name) {\r\n        this.setState({\r\n            activeRisk: name,\r\n            rangeByCriteria: this.createRage(name, this.state.activeYield),\r\n        });\r\n    }\r\n\r\n    onYieldChange(name) {\r\n        this.setState({\r\n            activeYield: name,\r\n            rangeByCriteria: this.createRage(this.state.activeRisk, name),\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"col-3\">\r\n                    <h5 className=\"mb-4\">Меры риска</h5>\r\n                    <div className=\"list-group\">\r\n                        {this.state.riskMeasures.map((r, i) => {\r\n                            const activeClass =\r\n                                r.name === this.state.activeRisk\r\n                                    ? ' list-group-item-secondary fw-bold'\r\n                                    : '';\r\n                            return (\r\n                                <button\r\n                                    key={i}\r\n                                    className={\r\n                                        'list-group-item list-group-item-action' +\r\n                                        activeClass\r\n                                    }\r\n                                    onClick={() => {\r\n                                        this.onRiskChange(r.name);\r\n                                    }}\r\n                                >\r\n                                    {r.title}\r\n                                </button>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-3\">\r\n                    <h5 className=\"mb-4\">Меры доходности</h5>\r\n                    <div className=\"list-group\">\r\n                        {this.state.yieldMeasures.map((y, i) => {\r\n                            const activeClass =\r\n                                y.name === this.state.activeYield\r\n                                    ? ' list-group-item-secondary fw-bold'\r\n                                    : '';\r\n                            return (\r\n                                <button\r\n                                    key={i}\r\n                                    className={\r\n                                        'list-group-item list-group-item-action' +\r\n                                        activeClass\r\n                                    }\r\n                                    onClick={() => {\r\n                                        this.onYieldChange(y.name);\r\n                                    }}\r\n                                >\r\n                                    {y.title}\r\n                                </button>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-6\">\r\n                    <h5 className=\"mb-4\">Результат</h5>\r\n                    <table className=\"table\">\r\n                        <thead className=\"table-primary\">\r\n                            <tr>\r\n                                <th>#</th>\r\n                                <th>ПИФ</th>\r\n                                <th>Значение критерия</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {this.state.rangeByCriteria.map((item, i) => {\r\n                                return (\r\n                                    <tr key={i}>\r\n                                        <td>{i + 1}</td>\r\n                                        <td>{item.name}</td>\r\n                                        <td>{item.criteria}</td>\r\n                                    </tr>\r\n                                );\r\n                            })}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BestChoice;\r\n","C:\\projects\\vkr\\src\\components\\Home\\Page\\Page.jsx",["100"],"import React from 'react';\r\nimport s from './Page.module.scss';\r\n\r\nexport default function ({ initialized, title, renderComponent }) {\r\n    return (\r\n        <div className={s.page}>\r\n            <h1 className={s.title}>{title}</h1>\r\n            {(() => {\r\n                if (initialized) {\r\n                    return renderComponent();\r\n                } else {\r\n                    return (\r\n                        <div>\r\n                            <p className={s.noDataMessage}>\r\n                                <i className=\"fas fa-exclamation-triangle\"></i>\r\n                                <span>\r\n                                    Для начала работы необходимо загрузить\r\n                                    данные\r\n                                </span>\r\n                            </p>\r\n                        </div>\r\n                    );\r\n                }\r\n            })()}\r\n        </div>\r\n    );\r\n}\r\n","C:\\projects\\vkr\\src\\components\\Home\\LoadData\\DataFromExcel\\DataFromExcel.jsx",["101"],"import React from 'react';\r\nimport * as XLSX from 'xlsx';\r\n\r\nclass DataFromExcel extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    onFileChange(file) {\r\n        const readingExcel = new Promise((resolve, reject) => {\r\n            const fileReader = new FileReader();\r\n            fileReader.readAsArrayBuffer(file);\r\n            fileReader.onload = (e) => {\r\n                const bufferArray = e.target.result;\r\n\r\n                const wb = XLSX.read(bufferArray, {\r\n                    type: 'buffer',\r\n                    cellDates: true,\r\n                });\r\n\r\n                const dataByPages = wb.SheetNames.map((name, id) => {\r\n                    const workSheet = wb.Sheets[name];\r\n\r\n                    const res = {\r\n                        id,\r\n                        name,\r\n                        yieldByDays: XLSX.utils.sheet_to_json(workSheet),\r\n                    };\r\n                    return res;\r\n                });\r\n                resolve(dataByPages);\r\n            };\r\n            fileReader.onerror = (error) => reject(error);\r\n        });\r\n\r\n        readingExcel.then(this.props.onSourceDataInitialize).catch();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"btn-group\">\r\n                <label htmlFor=\"loadFile\" className=\"btn btn-primary btn-sm\">\r\n                    Загрузить данные\r\n                </label>\r\n                <input\r\n                    id=\"loadFile\"\r\n                    onChange={(e) => {\r\n                        this.onFileChange(e.target.files[0]);\r\n                    }}\r\n                    className=\"d-none\"\r\n                    type=\"file\"\r\n                    accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"\r\n                />\r\n                <a\r\n                    href={process.env.PUBLIC_URL + '/xlsx/EmptyTemplate.xlsx'}\r\n                    className=\"btn btn-light btn-sm\"\r\n                >\r\n                    Скачать шаблон\r\n                </a>\r\n                <a\r\n                    href={process.env.PUBLIC_URL + '/xlsx/DataTemplate.xlsx'}\r\n                    className=\"btn btn-light btn-sm\"\r\n                >\r\n                    Скачать заполненный шаблон\r\n                </a>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DataFromExcel;\r\n","C:\\projects\\vkr\\src\\components\\Home\\LoadData\\DataPresentation\\DataPresentation.jsx",[],"C:\\projects\\vkr\\src\\utils\\disperSKO.js",["102"],"import Decimal from 'decimal.js';\r\n\r\nconst calculateDisperDecimal = (randomVar) => {\r\n    const MOs = randomVar.reduce(\r\n        ({ mo, mo2 }, rv) => {\r\n            const x2p = Decimal(rv.x).pow(2).mul(rv.p),\r\n                xp = Decimal(rv.x).mul(rv.p);\r\n            return {\r\n                mo: mo.plus(xp),\r\n                mo2: mo2.plus(x2p),\r\n            };\r\n        },\r\n        { mo: new Decimal(0), mo2: new Decimal(0) }\r\n    );\r\n\r\n    return MOs.mo2.sub(MOs.mo.pow(2));\r\n};\r\n\r\nexport default function (randomVar) {\r\n    const disper = calculateDisperDecimal(randomVar);\r\n    const sko = disper.sqrt();\r\n    return {\r\n        disper: disper.toNumber(),\r\n        sko: sko.toNumber(),\r\n    };\r\n}\r\n","C:\\projects\\vkr\\src\\utils\\mo.js",["103"],"import Decimal from 'decimal.js';\r\n\r\nexport default function (randomVar) {\r\n    return randomVar\r\n        .reduce((sumDecimal, rv) => {\r\n            const mul = Decimal(rv.p).times(Decimal(rv.x));\r\n            return sumDecimal.plus(mul);\r\n        }, new Decimal(0))\r\n        .toNumber();\r\n}\r\n","C:\\projects\\vkr\\src\\utils\\moments.js",["104"],"import Decimal from 'decimal.js';\r\n\r\nconst moment = (randomVar, mo, coeff) => {\r\n    return randomVar.reduce((sumDec, rv) => {\r\n        const subDec = Decimal(mo).sub(rv.x),\r\n            zeroDec = new Decimal(0),\r\n            pDec = new Decimal(rv.p);\r\n        const argDec = subDec.comparedTo(zeroDec) > 0 ? subDec : zeroDec;\r\n        return sumDec.plus(pDec.mul(argDec.pow(coeff)));\r\n    }, new Decimal(0));\r\n};\r\n\r\nexport default function (randomVar, mo, coeff) {\r\n    const momentDecimal = moment(randomVar, mo, coeff);\r\n    const standMomentDecimal = momentDecimal.pow(Decimal(1).div(coeff));\r\n    return {\r\n        moment: momentDecimal.toNumber(),\r\n        standMoment: standMomentDecimal.toNumber(),\r\n    };\r\n}\r\n","C:\\projects\\vkr\\src\\utils\\varCvar.js",["105"],"import Decimal from 'decimal.js';\r\n\r\nconst calculateVarDecimal = (randomVar, alpha) => {\r\n    let probSumD = new Decimal(randomVar[0].p),\r\n        xD = new Decimal(randomVar[0].x),\r\n        alphaD = Decimal(1).minus(Decimal(alpha));\r\n    for (let i = 0; i < randomVar.length; i++) {\r\n        let nextProbSumD = probSumD.plus(Decimal(randomVar[i].p)),\r\n            nextXD = Decimal(randomVar[i].x);\r\n        if (nextProbSumD.comparedTo(alphaD) > 0) {\r\n            return xD;\r\n        } else {\r\n            probSumD = nextProbSumD;\r\n            xD = nextXD;\r\n        }\r\n    }\r\n};\r\n\r\nconst calculateCvarDecimal = (randomVar, varD) => {\r\n    let mo = new Decimal(0);\r\n    for (let i = 0; i < randomVar.length; i++) {\r\n        let xiD = new Decimal(randomVar[i].x),\r\n            piD = new Decimal(randomVar[i].p);\r\n        if (xiD.comparedTo(varD) < 0) {\r\n            mo = mo.plus(xiD.times(piD));\r\n        } else {\r\n            return mo;\r\n        }\r\n    }\r\n};\r\n\r\nexport default function (randomVar, alpha) {\r\n    const varD = calculateVarDecimal(randomVar, alpha);\r\n    const cvarD = calculateCvarDecimal(randomVar, varD);\r\n    return {\r\n        varr: varD.toNumber(),\r\n        cvar: cvarD.toNumber(),\r\n    };\r\n}\r\n","C:\\projects\\vkr\\src\\utils\\ozhPol.js",["106"],"import Decimal from 'decimal.js';\r\n\r\nconst utilityD = (x) => Decimal(x).pow(0.7);\r\n\r\nexport default function (randomVar) {\r\n    return randomVar\r\n        .reduce((moD, rv) => {\r\n            const uxD = utilityD(rv.x),\r\n                pD = new Decimal(rv.p);\r\n            return moD.plus(uxD.times(pD));\r\n        }, new Decimal(0))\r\n        .toNumber();\r\n}\r\n","C:\\projects\\vkr\\src\\utils\\vzvPol.js",["107"],"import Decimal from 'decimal.js';\r\n\r\nconst a = 1,\r\n    b = 1;\r\n\r\nconst calcwxD = (x) => {\r\n    const q = Decimal(2).times(a).times(x),\r\n        p = Decimal(a).times(Decimal(x).pow(2));\r\n    return q.minus(p);\r\n};\r\n\r\nconst calcvxD = (x) => {\r\n    const l = Decimal(b).times(Decimal(x).pow(2)),\r\n        s = Decimal(2).times(b).times(x),\r\n        d = Decimal(2).times(b);\r\n    return l.minus(s).plus(d);\r\n};\r\n\r\nexport default function (randomVar) {\r\n    const MOs = randomVar.reduce(\r\n        ({ wD, vD }, rv) => {\r\n            const wxiD = calcwxD(rv.x),\r\n                vxiD = calcvxD(rv.x),\r\n                piD = new Decimal(rv.p);\r\n            return {\r\n                wD: wD.plus(wxiD.times(piD)),\r\n                vD: vD.plus(vxiD.times(piD)),\r\n            };\r\n        },\r\n        { wD: new Decimal(0), vD: new Decimal(0) }\r\n    );\r\n    return MOs.wD.dividedBy(MOs.vD).toNumber();\r\n}\r\n","C:\\projects\\vkr\\src\\utils\\rangPol.js",["108"],"import Decimal from 'decimal.js';\r\n\r\nconst gamma = 0.69;\r\n\r\nconst calcgpD = (pD) => {\r\n    const e1 = Decimal(Decimal(1).minus(pD)).pow(gamma);\r\n    const e2 = pD.pow(gamma).plus(e1);\r\n    const e3 = e2.pow(Decimal(1).div(gamma));\r\n\r\n    // const _e1 = e1.toNumber(),\r\n    //     _e2 = e2.toNumber(),\r\n    //     _e3 = e3.toNumber();\r\n\r\n    return Decimal(1).minus(e1.div(e3));\r\n};\r\n\r\nconst calcuxD = (xD) => xD.pow(0.7);\r\n\r\nconst calcDArrSum = (arrD) =>\r\n    arrD.reduce((sumD, a) => {\r\n        return sumD.plus(a);\r\n    }, new Decimal(0));\r\n\r\nexport default function (randomVar) {\r\n    const xsD = randomVar.map((rv) => new Decimal(rv.x)),\r\n        psD = randomVar.map((rv) => new Decimal(rv.p));\r\n    let sumD = calcuxD(xsD[0]).plus(calcgpD(psD[0]));\r\n\r\n    // const _xs = xsD.map((x) => x.toNumber()),\r\n    //     _ps = psD.map((p) => p.toNumber());\r\n\r\n    for (let i = 1; i < randomVar.length; i++) {\r\n        let psFirstD = psD.slice(0, i + 1),\r\n            psSecondD = psD.slice(0, i);\r\n\r\n        // let _psFirst = _ps.slice(0, i + 1),\r\n        //     _psSecond = _ps.slice(0, i);\r\n\r\n        let psFDSum = calcDArrSum(psFirstD),\r\n            psSDSum = calcDArrSum(psSecondD);\r\n\r\n        // let _psFSum = psFDSum.toNumber(),\r\n        //     _psSSum = psSDSum.toNumber();\r\n\r\n        let gpFirst = calcgpD(psFDSum),\r\n            gpSecond = calcgpD(psSDSum);\r\n\r\n        // let _grFirst = gpFirst.toNumber(),\r\n        //     _gpSecond = gpSecond.toNumber();\r\n\r\n        let uxi = calcuxD(xsD[i]);\r\n\r\n        // let _uxi = uxi.toNumber();\r\n\r\n        sumD = sumD.plus(uxi.times(gpFirst.minus(gpSecond)));\r\n    }\r\n\r\n    return sumD.toNumber();\r\n}\r\n",{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","severity":1,"message":"114","line":7,"column":5,"nodeType":"115","messageId":"116","endLine":9,"endColumn":6},{"ruleId":"117","severity":1,"message":"118","line":63,"column":19,"nodeType":"119","messageId":"120","endLine":63,"endColumn":21},{"ruleId":"117","severity":1,"message":"118","line":64,"column":18,"nodeType":"119","messageId":"120","endLine":64,"endColumn":20},{"ruleId":"117","severity":1,"message":"118","line":65,"column":21,"nodeType":"119","messageId":"120","endLine":65,"endColumn":23},{"ruleId":"117","severity":1,"message":"118","line":66,"column":27,"nodeType":"119","messageId":"120","endLine":66,"endColumn":29},{"ruleId":"117","severity":1,"message":"118","line":160,"column":39,"nodeType":"119","messageId":"120","endLine":160,"endColumn":41},{"ruleId":"117","severity":1,"message":"121","line":53,"column":22,"nodeType":"119","messageId":"120","endLine":53,"endColumn":24},{"ruleId":"117","severity":1,"message":"118","line":54,"column":47,"nodeType":"119","messageId":"120","endLine":54,"endColumn":49},{"ruleId":"122","severity":1,"message":"123","line":4,"column":1,"nodeType":"124","endLine":27,"endColumn":2},{"ruleId":"113","severity":1,"message":"114","line":5,"column":5,"nodeType":"115","messageId":"116","endLine":7,"endColumn":6},{"ruleId":"122","severity":1,"message":"123","line":19,"column":1,"nodeType":"124","endLine":26,"endColumn":2},{"ruleId":"122","severity":1,"message":"123","line":3,"column":1,"nodeType":"124","endLine":10,"endColumn":2},{"ruleId":"122","severity":1,"message":"123","line":13,"column":1,"nodeType":"124","endLine":20,"endColumn":2},{"ruleId":"122","severity":1,"message":"123","line":32,"column":1,"nodeType":"124","endLine":39,"endColumn":2},{"ruleId":"122","severity":1,"message":"123","line":5,"column":1,"nodeType":"124","endLine":13,"endColumn":2},{"ruleId":"122","severity":1,"message":"123","line":19,"column":1,"nodeType":"124","endLine":33,"endColumn":2},{"ruleId":"122","severity":1,"message":"123","line":24,"column":1,"nodeType":"124","endLine":59,"endColumn":2},"no-native-reassign",["125"],"no-negated-in-lhs",["126"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]